version: '3.7'

services:
  # (Optional) Postgres if you want run, schedule, event storage. 
  # If ephemeral is enough, remove this block entirely.
  docker_example_postgresql:
    image: postgres:11
    container_name: docker_example_postgresql
    environment:
      POSTGRES_USER: 'postgres_user'
      POSTGRES_PASSWORD: 'postgres_password'
      POSTGRES_DB: 'postgres_db'
    networks:
      - docker_example_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres_user -d postgres_db']
      interval: 10s
      timeout: 8s
      retries: 5

  docker_example_user_code:
    build:
      context: .
      dockerfile: Dockerfile_user_code
    container_name: docker_example_user_code
    image: docker_example_user_code_image
    restart: always
    environment:
      DAGSTER_CURRENT_IMAGE: "docker_example_user_code_image"
    networks:
      - docker_example_network

  docker_example_webserver:
    build:
      context: .
      dockerfile: Dockerfile_dagster
    entrypoint:
      - dagster-webserver
      - -h
      - '0.0.0.0'
      - -p
      - '3000'
      - -w
      - 'workspace.yaml'
    container_name: docker_example_webserver
    expose:
      - '3000'
    ports:
      - '3000:3000'
    environment:
      # If using Postgres or other environment, put them here
      # DAGSTER_HOME = /opt/dagster/dagster_home if needed 
      # ...
    volumes:
      # Make docker client accessible so we can terminate containers from the webserver
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - docker_example_network
    depends_on:
      docker_example_user_code:
        condition: service_started
      # optionally also depends on postgres if you want real run storage 
      docker_example_postgresql:
        condition: service_healthy

  docker_example_daemon:
    build:
      context: .
      dockerfile: Dockerfile_dagster
    entrypoint:
      - dagster-daemon
      - run
    container_name: docker_example_daemon
    restart: on-failure
    environment:
      # same environment if you want DB credentials, etc.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - docker_example_network
    depends_on:
      docker_example_user_code:
        condition: service_started
      # If using Postgres
      docker_example_postgresql:
        condition: service_healthy

networks:
  docker_example_network:
    driver: bridge
    name: docker_example_network
